version: '3.8'

services:
  # FastAPI Backend
  facturx-api:
    build:
      context: ../../apps/facturx-api
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/facturx
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../../apps/facturx-api:/app
      - /app/.venv
    depends_on:
      - postgres
      - redis
    networks:
      - facturx-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    platform: linux/arm64
    environment:
      - POSTGRES_DB=facturx
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - facturx-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    platform: linux/arm64
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - facturx-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Temporary - HTTP only)
  nginx:
    image: nginx:alpine
    platform: linux/arm64
    ports:
      - "80:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d/facturx-temp.conf:/etc/nginx/conf.d/default.conf
    environment:
      - DOMAIN_NAME=facturx.app
    depends_on:
      - facturx-api
    networks:
      - facturx-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  facturx-network:
    driver: bridge